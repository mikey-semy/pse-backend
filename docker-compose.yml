version: "3.8"
services:
  database:
    container_name: database_pse
    image: postgres:16.4-alpine3.19
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - database_volume:/var/lib/postgresql/data/
      - ./library/postgres/init-database.sh:/docker-entrypoint-initdb.d
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - network

  web:
    container_name: web_pse
    build: 
      context: .
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - 8000:8000
    environment:
      - HOST_MACHINE=172.17.0.1
    restart: always
    volumes:
      - web_static_volume:/usr/src/app/static
      - ./docker-entrypoint.sh:/usr/src/app/docker-entrypoint.sh
    networks:
      - network

  nginx:
    build: ./nginx
    container_name: nginx_pse
    ports:
      - 8000:8000
    depends_on:
      - web
    volumes:
      - web_static_volume:/usr/src/app/static
      - ./nginx:/etc/nginx/conf.d
    networks:
      - network
      


volumes:
  database_volume:
  web_static_volume:


networks:
  network:
    driver: bridge